<launch>
  <arg name="id_robot" default="robot"/>
  <arg name="prefix" value="$(arg id_robot)_"/>
  <arg name="smach" default="true" />
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg if="$(arg debug)" name="launch_prefix" value="terminator -m -x gdb --args" />
  <group ns="$(arg id_robot)">


	<!-- Move Base Flex -->
	<node pkg="mbf_costmap_nav" type="mbf_costmap_nav" respawn="false" name="move_base_flex" output="screen" launch-prefix="$(arg launch_prefix)" >
		<param name="tf_timeout" value="1.5"/>
		<param name="planner_max_retries" value="3"/>
		<remap from="cmd_vel" to="move_base/cmd_vel"/>
		<param name="SBPLLatticePlanner/primitive_filename" value="$(find robotnik_move_base_flex)/mprim/test_5cm.mprim"/>
		<rosparam file="$(find navegacion_autonoma)/config/move_base_flex/planners_world.yaml" command="load" />
		<rosparam file="$(find navegacion_autonoma)/config/move_base_flex/controllers_world.yaml" command="load" />
		<rosparam file="$(find navegacion_autonoma)/config/move_base_flex/recovery_behaviors_world.yaml" command="load" />
		<rosparam file="$(find navegacion_autonoma)/config/move_base_flex/costmap_common_params_world.yaml" command="load" ns="global_costmap"/>
		<rosparam file="$(find navegacion_autonoma)/config/move_base_flex/costmap_common_params_world.yaml" command="load" ns="local_costmap" />
		<rosparam file="$(find navegacion_autonoma)/config/move_base_flex/global_costmap_params_world.yaml" command="load" />
		<rosparam file="$(find navegacion_autonoma)/config/move_base_flex/local_costmap_params_world.yaml" command="load" />
		<rosparam file="$(find navegacion_autonoma)/config/move_base_flex/move_base_flex_world.yaml" command="load" />
	</node>

	<!-- SMACH Navigation State Machine -->
	<node if="$(arg smach)" pkg="robotnik_move_base_flex" type="mbf_state_machine.py" name="mbf_state_machine" output="screen"/>

	<!-- Robotnik Move Base Flex -->
	<node pkg="robotnik_move_base_flex" type="robotnik_move_base_flex_node" name="robotnik_move_base_flex" output="screen">
		<param name="robot_base_frame" value="$(arg prefix)base_footprint"/>
	</node>

	<!-- Robotnik waypoints -->
	<node name="robotnik_waypoints_manager" pkg="robotnik_waypoints_manager" type="robotnik_waypoints_manager_node" output="screen">
    <rosparam command="load" file="$(find robotnik_waypoints_manager)/config/robotnik_waypoints_manager.yaml"/>
    <rosparam param="root_folder_path" subst_value="true"> </rosparam>
  </node>

  <node pkg="robotnik_waypoints_exe" type="robotnik_waypoints_exe_node" name="robotnik_waypoints_exe" output="screen"/>

  </group>

</launch>
